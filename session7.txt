#Ansible
we are going to control two types of VM a. 2Ubuntuvm b. 1Amazon Linux


#Adhoc Command you can run with Module and without moudule

#ansible Playbook
.yml
.yaml

ansible-playbook firstplaybook.yaml


++++++++++++++++++++++++++++++++++
#create user
ansible -b -m user -a 'name=niladri' webserver
#ask for password
ansible -b -K -m user -a 'name=niladri' webserver

ansible webserver -a"apt install httpd -y"

ansible -b webserver -a"apt update -y"

ansible webserver -a"touch niladri"

ansible -b  webserver -a"apt install docker.io -y"

ansible -m service -a 'name=ssh state=started' webserver

#List The all hosts adhoc command
ansible all --list-hosts
ansible demo --list-hosts

ansible demo[1] --list-hosts

#if you  wanted to get last node of the group
ansible demo[-1] --list-hosts

#if you  wanted to get last node of the all the groups 
[root@ip-172-31-57-116 ~]# ansible all[-1] --list-hosts

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
what is adhoc command
what is module
what is playbook

++++++++++++++++++++++++ Exercise with Adhoc+++++++++++++++++++++++++++++++++
#usecase 1 , I will create manually files in nodes ansible users , I want list them using adhoc ansible command from the master
ansible <groupname> -a"linux command"  -----> -a stands for arguments

ansible demo -a"ls"

#usecase 2 , If i want to list the files in node1
ansible demo[1] -a"ls"

#usecase 3 install httpd in nodes in nodes
ansible demo -a"yum install httpd -y"
ansible demo -a"sudo yum install httpd -y"

ansible demo -a"sudo yum remove httpd -y"

#create a file in nodes 
ansible demo -a"touch niladri"

#create a directory in node1
ansible demo[1] -a"mkdir nil"

++++++++++++++++++++++++++++++++++++++++
Second classs:
#install docker using playbok #you need to understand 
[ansible@ip-172-31-57-116 ~]$ vi myfirstplaybook.yaml

--- #our first playbook to install the docker
- hosts: demo
  user: ansible
  become: yes
  connection: ssh
  tasks:
    - name: install docker on nodes
      action: yum name=docker state=present
	  

[ansible@ip-172-31-57-116 ~]$ ansible-playbook myfirstplaybook.yaml


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#Remove docker and install httpd using playbok #you need to understand
[ansible@ip-172-31-57-116 ~]$ cat myfirstplaybook.yaml
--- #our first playbook to install the docker
- hosts: demo
  user: ansible
  become: yes
  connection: ssh
  tasks:
    - name: install docker on nodes
      action: yum name=docker state=absent
    - name: install httpd
      action: yum name=httpd state=present
[ansible@ip-172-31-57-116 ~]$
+++++++++++++++++++++++++++++++++++++++++

#create a file in master and copy the same to node using play book

touch index.html

[ansible@ip-172-31-57-116 ~]$ cat myfirstplaybook.yaml
--- #our first playbook to install the docker
- hosts: demo
  user: ansible
  become: yes
  connection: ssh
  tasks:
    - name: install docker on nodes
      action: yum name=docker state=absent
    - name: install httpd
      action: yum name=httpd state=present
    - name: copy index.html
      ansible.builtin.copy:
           src: /home/ansible/index.html
           dest: /home/ansible/
[ansible@ip-172-31-57-116 ~]$


[ansible@ip-172-31-57-116 ~]$ cat myfirstplaybook.yaml
--- #our first playbook to install the docker
- hosts: demo
  user: ansible
  become: yes
  connection: ssh
  tasks:
    - name: install docker on nodes
      action: yum name=docker state=absent
    - name: install httpd
      action: yum name=httpd state=present
    - name: copy index.html
      ansible.builtin.copy:
           src: /home/ansible/index.html
           dest: /home/ansible/
    - name: create directory
      action: file name=niladridir state=directory
[ansible@ip-172-31-57-116 ~]$
+++++++++++++++++++++++++++++++
####run a module, using a module install docker

ansiable demo -b -m yum -a "pkg=docker state=present"

++++++++++++++++++++++++++++++++++++++++++
#host an application on the httpd server using handlers

[ansible@ip-172-31-57-116 ~]$ cat httpdserver.yaml
--- #Myweb For handlers
- hosts: demo #your host
  user: ansible #user
  become: yes #if you want to use root priviledge to perform some actions
  connection: ssh #connect type
  tasks:
    - name: install httpd
      action: yum name=httpd state=present
      notify: restart httpd
    - name: copy index.html
      ansible.builtin.copy:
           src: /home/ansible/index.html
           dest: /var/www/html/
  handlers:
    - name: restart httpd
      action: service name=httpd state=restarted
[ansible@ip-172-31-57-116 ~]$

+++++++++++++++++++++++++++++++
script
ansible -m shell -a "service apache2 status" webservers

ansible -m setup webservers 

ansible webservers -m shell -a 'hostname'

ansible webservers -m apt -a 'name=git state=present' --become

ansible webservers -m file -a 'dest=/root/sample.txt state=touch mode=600 owner=root group=root' --become
++++++++++++++++++++++++++++++++++++++++++++++
ubuntu@ip-172-31-93-211:~$ cat new.yaml
- hosts: webserver
  user: ubuntu
  become: yes
  connection: ssh
  tasks:
    - name: install docker on nodes
      action: apt name=docker.io state=absent
    - name: install maven
      action: apt name=maven state=present

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
- hosts: webserver #your host
  user: ansible #user
  become: yes #if you want to use root priviledge to perform some actions
  connection: ssh #connect type
  tasks:
    - name: install httpd
      action: apt name=apache2 state=present
      notify: restart httpd
    - name: copy index.html
      ansible.builtin.copy:
           src: /home/ubuntu/index.html
           dest: /var/www/html/
  handlers:
    - name: restart httpd
      action: service name=apache2 state=restarted
	  
+++++++++++++++++++++++++++++++++++++++++++++
- hosts: webserver
  become: yes
  vars:
    users:
    - username: niladri
    - username: pampa
    - username: satvik
  tasks:
  - name: create group for users
    group:
      name: family
      state: present
  - name: create user "{{ item.username }}"
    user:
      name: "{{ item.username }}"
      create_home: yes
      groups: family
    with_items: "{{ users }}"
++++++++++++++++++++++++++++++++++++++++++++++++

Ansible Roles
https://galaxy.ansible.com/

switch to root if you are planning to create at /etc/ansible/roles

root@ip-172-31-26-89:/etc/ansible/roles# ansible-galaxy init demo-role
- Role demo-role was created successfully
root@ip-172-31-26-89:/etc/ansible/roles# ls
demo-role

#Inside the demo role you will see below folder structure
root@ip-172-31-26-89:/etc/ansible/roles/demo-role# ls
README.md  defaults  files  handlers  meta  tasks  templates  tests  vars
root@ip-172-31-26-89:/etc/ansible/roles/demo-role#

#next we will create the ansible tasks
cd tasks
root@ip-172-31-26-89:/etc/ansible/roles/demo-role/tasks#  cat main.yml
---
# tasks file for demo-role
- name: install nginx web server
  apt: pkg=nginx state=present
  notify:
  - start nginx #once Handlers got created

- name: create group
  group: name=demo-group state=present
  register: group_success #If group creation is success then only User should create below in the group
  ignore_errors: True # ignore the errors

- name: create user
  user: name=demo-user group=demo-group create_home=yes
  when: group_success is success # it will create if group created

- name: deploy index.html
  copy: src=index.html dest=/var/www/html/ mode=644

# index. html file should be created
 cd files
 root@ip-172-31-26-89:/etc/ansible/roles/demo-role/files# ls
index.html
root@ip-172-31-26-89:/etc/ansible/roles/demo-role/files# cat index.html
<html>
  <title>
        Ansible
  </title>
  <body>
        <h5>Welcome to Ansible Roles</h5>
  </body>

</html>

# we will create a handelers to restart the nginx 
cd handlers
root@ip-172-31-26-89:/etc/ansible/roles/demo-role/handlers# cat main.yml
---
# handlers file for demo-role
- name: start nginx
  service: name=nginx state=started

# now it is time to apply the role
#come to the same directory where your role is available

root@ip-172-31-26-89:/etc/ansible/roles# ls
demo-role  nginx-roles.yml
root@ip-172-31-26-89:/etc/ansible/roles# cat nginx-roles.yml
---
- hosts: sg
  become: yes
  roles:
  - demo-role
root@ip-172-31-26-89:/etc/ansible/roles#

#Finaly run
root@ip-172-31-26-89:/etc/ansible/roles# ansible-playbook nginx-roles.yml

#Now Access Web Page
http://<nodeip>/
++++++++++++++++++++++++++++++++++++++

Roles Example 
Now update the /etc/motd file using ansible playbook roles


ubuntu@ip-172-31-26-89:~/niladri-role$ ls
README.md  defaults  files  handlers  meta  tasks  templates  tests  vars
ubuntu@ip-172-31-26-89:~/niladri-role$

# Create a Template file demor.j2
ubuntu@ip-172-31-26-89:~/niladri-role/templates$ cat demor.j2
Welcome to {{ ansible_hostname }}


This File was created on {{ ansible_date_time.date }}

Go Away if you have no business being here


contact {{ system_manager }} if anything is wrong


#Create tasks to use the main.yml file present inside the tasks folder, Use the same Template file to create a task
ubuntu@ip-172-31-26-89:~/niladri-role/tasks$ ls
main.yml
ubuntu@ip-172-31-26-89:~/niladri-role/tasks$ cat main.yml
---
# tasks file for niladri-role
- name: copy demor file
  template:
     src: templates/demor.j2
     dest: /etc/demor
     owner: root
     group: root
     mode: 0444
ubuntu@ip-172-31-26-89:~/niladri-role/tasks$

# Create Ansible custom Variable which is used by template file
ubuntu@ip-172-31-26-89:~/niladri-role/defaults$ ls
main.yml
ubuntu@ip-172-31-26-89:~/niladri-role/defaults$ cat main.yml
---
# defaults file for niladri-role
system_manager: niladrimondal.mondal@gmail.com
ubuntu@ip-172-31-26-89:~/niladri-role/defaults$

#Finally Create ansible-role playbook same directory where role base folder got created

root@ip-172-31-26-89:/etc/ansible/roles# ls
 demor-role.yaml    niladri-role
root@ip-172-31-26-89:/etc/ansible/roles# cat demor-role.yaml
---
- name: use demor role playbook
  hosts: sg
  user: ubuntu
  become: true
  roles:
    - role: niladri-role
      system_manager: niladrimondal.mondal@gmail.com
root@ip-172-31-26-89:/etc/ansible/roles#
